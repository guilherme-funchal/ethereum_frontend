import './../App.css';
import Web3 from 'web3';
import api from '../api';
import Swal from 'sweetalert2';
import withReactContent from 'sweetalert2-react-content';
import { Modal, Button } from 'react-bootstrap/';


import { useState, useEffect } from "react";

export default function Usuarios() {  

  async function doUsuarios(){
    const response = api.get('account/list');
      var transactions_result = (await response).data;
      return transactions_result;
  }

  async function editUsuario(user_id){
    var response = await api.get('account/find/' + user_id);
    var user = response.data[0].user_id;

    const { value: formValues } = await Swal.fire({
      title: 'Multiple inputs',
      html:
      '<div class="form-group">' +
      '<label for="inputsm">User ID</label>' +
      '<div class="col-sm-12">' +
        '<input id="swal-input1" class="swal2-input" value=' + String(response.data[0].user_id) + '>' +
        '<input id="swal-input2" class="swal2-input" value=' + String(response.data[0].name) + '>' +
        '<input id="swal-input3" class="swal2-input" value=' + String(response.data[0].profile) + '>' +
        '<input id="swal-input4" class="swal2-input" value=' + String(response.data[0].email) + '>' +
        '<input id="swal-input5" class="swal2-input" value=' + String(response.data[0].type) + '>' +
        '<input id="swal-input6" class="swal2-input" value=' + String(response.data[0].doc) + '>',

      focusConfirm: false,
      preConfirm: () => {
        return [
          document.getElementById('swal-input1').value,
          document.getElementById('swal-input2').value,
          document.getElementById('swal-input3').value,
          document.getElementById('swal-input4').value,
          document.getElementById('swal-input5').value,
          document.getElementById('swal-input6').value
        ]
      }
    })
    
    if (formValues) {
      Swal.fire(JSON.stringify(formValues))
    }


    // const { value: formValues } = await Swal.fire({
    //   title: 'Editar usuário',
    //   html: `
    //   <div class="form-group">
    //   <label for="inputsm">User ID</label>
    //   <div class="col-sm-12">
    //   <input type="text" size=32 class="form-control form-control-sm" id="swal-input1" value=` + String(response.data[0].user_id) + `>
    //   </div>
    //   </div><div class="form-group form-group-sm">
    //   <label for="inputsm">Nome</label>
    //   <div class="col-sm-12">
    //   <input type="text" size=32 class="swal2-input" name="nome" id="nome" value=` + String(response.data[0].name) + `>
    //   </div>
    //   </div>
    //   <div class="form-group form-group-sm">
    //   <label for="inputsm">Perfil</label>
    //   <div class="col-sm-12">
    //   <input type="text" size=32 class="swal2-input" name="perfil"  id="perfil" value=` + String(response.data[0].profile) + `>
    //   </div>
    //   </div>
    //   <div class="form-group form-group-sm">
    //   <label for="inputsm">Email</label>
    //   <div class="col-sm-12">
    //   <input type="text" size=32 class="swal2-input" name="email" id="email" value=` + String(response.data[0].email) + `>
    //   </div>
    //   </div>
    //   <div class="form-group form-group-sm">
    //   <label for="inputsm">Tipo</label>
    //   <div class="col-sm-12">
    //   <input type="text" size=32 class="swal2-input" name="tipo"  id="type" value=` + String(response.data[0].type) + `>
    //   </div>
    //   </div>
    //   <div class="form-group form-group-sm">
    //   <label for="inputsm">Doc</label>
    //   <div class="col-sm-12">
    //   <input type="text" size=32 class="swal2-input" name="documento" id="documento" value=` + String(response.data[0].doc) + `>
    //   </div>
    //   </div>`,

    //   confirmButtonText: 'Enviar',
    //   width: '450px',
    //   heightAuto: false,
    //   focusConfirm: false,
    //   // preConfirm: () => {
    //   //   const user_id = Swal.getPopup().querySelector('#user_id').value
    //   //   console.log(user_id)
    //   //   const nome = Swal.getPopup().querySelector('#nome').value
    //   //   const perfil = Swal.getPopup().querySelector('#perfil').value
    //   //   const email = Swal.getPopup().querySelector('#email').value
    //   //   const tipo = Swal.getPopup().querySelector('#tipo').value
    //   //   const documento = Swal.getPopup().querySelector('#documento').value
    //   //   if (!user_id || !nome || !perfil || !email || !tipo || !documento) {
    //   //     Swal.showValidationMessage(`Entre com o dados`)
    //   //   }
    //   //   return { user_id: user_id, nome: nome,  perfil: perfil, email: email,  tipo: tipo, documento: documento }
    //   // }
    //   preConfirm: () => {
    //     return [
    //       document.getElementById('swal-input1').value,
    //       document.getElementById('nome').value,
    //       document.getElementById('perfil').value,
    //       document.getElementById('enail').value,
    //       document.getElementById('tipo').value,
    //       document.getElementById('documento').value
    //     ]
    //   }
    // })

    // if (formValues) {
    //   Swal.fire(JSON.stringify(formValues))
    // }
  }
  //   }).then((result) => {
  //     Swal.fire(`
  //       User_id: ${result.value.user_id}
  //       Nome: ${result.value.nome}
  //       Perfil: ${result.value.perfil}
  //       Email: ${result.value.email}
  //       Tipo: ${result.value.tipo}
  //       Documento: ${result.value.documento}
  //     `.trim())
  //   })
  // }

  async function delUsuario(user_id){
    // var response = api.delete('account/' + user_id);
    Swal.fire({
      title: 'Deseja excluir a conta?',
      text: "",
      icon: 'question',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Sim',
      cancelButtonText: 'Não'
    }).then((result) => {
      if (result.isConfirmed) {
        // var response = api.patch('account/' + user_id);
        Swal.fire(
          'Usuário atualizado!'
        )
      }
    })
  }
  
  const resultado = doUsuarios();
  const [usuarios, setUsuarios] = useState(['']);


  const [show, setShow] = useState(false);
  const handleClose = () => setShow(false);
  const handleShow = () => setShow(true);

  var promise = Promise.resolve(resultado);
  promise.then(function(val) {
     setUsuarios(val);
  });

  return (


    <div className="content-wrapper">
      <div className="content-header">
        <div className="container-fluid">
          <div className="row mb-2">
            <div className="col-sm-6">
              <h1 className="m-0 text-dark">Usuarios</h1>
            </div>
          </div>
        </div>
      </div>
      <section className="content">
        <div className="container-fluid">

          <table class="blueTable">
            <thead>
              <tr>
                <th><center>User ID</center></th>
                <th><center>Nome</center></th>
                <th><center>Email</center></th>
                <th><center>Perfil</center></th>
                <th><center>Operação</center></th>
              </tr>
            </thead>
            {usuarios.map((data) => {
              return (<tr>
                <td><center>{data.user_id}</center></td>
                <td><center>{data.name}</center></td>
                <td><center>{data.email}</center></td>
                <td><center>{data.profile}</center></td>
                <td><center> <div>
                  <Button variant="primary" size="sm" onClick={() => editUsuario(data.user_id)}>
                    Editar
                  </Button>
                  <Button variant="danger" size="sm" onClick={() => delUsuario(data.user_id)}>
                    Excluir
                  </Button>
                  
                </div>
                </center></td>
              </tr>
              );
            })}

            <tbody>
            </tbody>


          </table>
        </div>
        <Modal show={show} onHide={handleClose}>
        <Modal.Header closeButton>
          <Modal.Title>Modal heading</Modal.Title>
        </Modal.Header>
        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>
        <Modal.Footer>
          <Button variant="secondary" onClick={handleClose}>
            Close
          </Button>
          <Button variant="primary" onClick={handleClose}>
            Save Changes
          </Button>
        </Modal.Footer>
      </Modal>
      </section>
      
    </div>
  )
}    
